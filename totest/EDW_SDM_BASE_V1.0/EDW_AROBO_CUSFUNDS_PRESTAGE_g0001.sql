-- SQL for table: EDW_AROBO_CUSFUNDS_PRESTAGE
/* TRANSFORM_DATA */

/* 1. Delete 目的表 Prestage data_exch_date = '#排程啟動日#' */
DELETE FROM ${TARGET_SCHEMA}.${TARGET_TABLE} WHERE DATA_EXCH_DATE = TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd');

-- Trinity SQL Script
/* 2. 抽取 Stage 同期別進行新增 */
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
CUS_CODE,
IPMSET_CODE,
BANK_PRO_CODE,
PRO_CODE,
PRO_CUR_CODE,
FIRST_BUY_DATE,
INV_TYPE,
INV_CUR_CODE,
INV_AMT_FC,
INV_AMT_LC,
BUY_PRICE,
UNIT,
PRICE,
PRICE_DATE,
FX_RATE,
FX_DATE,
MKT_AMT_FC,
MKT_AMT_LC,
UPL_FC,
UPL_DIVIDEND_FC,
UPL_LC,
UPL_DIVIDEND_LC,
URETURN_FC,
URETURN_DIVIDEND_FC,
URETURN_LC,
URETURN_DIVIDEND_LC,
DIV_AMT_FC,
DIV_AMT_LC,
ONWAY_AMT,
ONWAY_UNIT,
ONWAY_INV_AMT,
ORDER_YN,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
CUS_CODE,
IPMSET_CODE,
BANK_PRO_CODE,
PRO_CODE,
PRO_CUR_CODE,
FIRST_BUY_DATE,
INV_TYPE,
INV_CUR_CODE,
INV_AMT_FC,
INV_AMT_LC,
BUY_PRICE,
UNIT,
PRICE,
PRICE_DATE,
FX_RATE,
FX_DATE,
MKT_AMT_FC,
MKT_AMT_LC,
UPL_FC,
UPL_DIVIDEND_FC,
UPL_LC,
UPL_DIVIDEND_LC,
URETURN_FC,
URETURN_DIVIDEND_FC,
URETURN_LC,
URETURN_DIVIDEND_LC,
DIV_AMT_FC,
DIV_AMT_LC,
ONWAY_AMT,
ONWAY_UNIT,
ONWAY_INV_AMT,
ORDER_YN,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE DATA_EXCH_DATE = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
;

.export @LOAD_ROWCNT updatecnt;
-- SQL for table: EDW_AROBO_CUSFUNDS_PRESTAGE
/* TRANSFORM_DATA */

/* 1.Truncate 目的表 */
TRUNCATE TABLE ${TARGET_SCHEMA}.${TARGET_TABLE};

-- Trinity SQL Script
/* 
2. 抽取 正式區Stage DATA_EXCH_DATE='#資料交換期別#' 之資料
3. 遮罩後寫入驗證區Prestage 
*/
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
CUS_CODE,
IPMSET_CODE,
BANK_PRO_CODE,
PRO_CODE,
PRO_CUR_CODE,
FIRST_BUY_DATE,
INV_TYPE,
INV_CUR_CODE,
INV_AMT_FC,
INV_AMT_LC,
BUY_PRICE,
UNIT,
PRICE,
PRICE_DATE,
FX_RATE,
FX_DATE,
MKT_AMT_FC,
MKT_AMT_LC,
UPL_FC,
UPL_DIVIDEND_FC,
UPL_LC,
UPL_DIVIDEND_LC,
URETURN_FC,
URETURN_DIVIDEND_FC,
URETURN_LC,
URETURN_DIVIDEND_LC,
DIV_AMT_FC,
DIV_AMT_LC,
ONWAY_AMT,
ONWAY_UNIT,
ONWAY_INV_AMT,
ORDER_YN,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
CUS_CODE,
IPMSET_CODE,
BANK_PRO_CODE,
PRO_CODE,
PRO_CUR_CODE,
FIRST_BUY_DATE,
INV_TYPE,
INV_CUR_CODE,
INV_AMT_FC,
INV_AMT_LC,
BUY_PRICE,
UNIT,
PRICE,
PRICE_DATE,
FX_RATE,
FX_DATE,
MKT_AMT_FC,
MKT_AMT_LC,
UPL_FC,
UPL_DIVIDEND_FC,
UPL_LC,
UPL_DIVIDEND_LC,
URETURN_FC,
URETURN_DIVIDEND_FC,
URETURN_LC,
URETURN_DIVIDEND_LC,
DIV_AMT_FC,
DIV_AMT_LC,
ONWAY_AMT,
ONWAY_UNIT,
ONWAY_INV_AMT,
ORDER_YN,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE ${DATA_LIFE_BASE} = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
;

.export @LOAD_ROWCNT updatecnt;
-- SQL for table: EDW_AROBO_CUSFUNDS_PRESTAGE
/* TRANSFORM_DATA */

/* 1.Truncate 目的表 */
TRUNCATE TABLE ${TARGET_SCHEMA}.${TARGET_TABLE};

-- Trinity SQL Script
/* 
2. 抽取 正式區Stage DATA_EXCH_DATE='#資料交換期別#' 之資料
3. 遮罩後寫入驗證區Prestage 
*/
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
CUS_CODE,
IPMSET_CODE,
BANK_PRO_CODE,
PRO_CODE,
PRO_CUR_CODE,
FIRST_BUY_DATE,
INV_TYPE,
INV_CUR_CODE,
INV_AMT_FC,
INV_AMT_LC,
BUY_PRICE,
UNIT,
PRICE,
PRICE_DATE,
FX_RATE,
FX_DATE,
MKT_AMT_FC,
MKT_AMT_LC,
UPL_FC,
UPL_DIVIDEND_FC,
UPL_LC,
UPL_DIVIDEND_LC,
URETURN_FC,
URETURN_DIVIDEND_FC,
URETURN_LC,
URETURN_DIVIDEND_LC,
DIV_AMT_FC,
DIV_AMT_LC,
ONWAY_AMT,
ONWAY_UNIT,
ONWAY_INV_AMT,
ORDER_YN,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
CUS_CODE,
IPMSET_CODE,
BANK_PRO_CODE,
PRO_CODE,
PRO_CUR_CODE,
FIRST_BUY_DATE,
INV_TYPE,
INV_CUR_CODE,
INV_AMT_FC,
INV_AMT_LC,
BUY_PRICE,
UNIT,
PRICE,
PRICE_DATE,
FX_RATE,
FX_DATE,
MKT_AMT_FC,
MKT_AMT_LC,
UPL_FC,
UPL_DIVIDEND_FC,
UPL_LC,
UPL_DIVIDEND_LC,
URETURN_FC,
URETURN_DIVIDEND_FC,
URETURN_LC,
URETURN_DIVIDEND_LC,
DIV_AMT_FC,
DIV_AMT_LC,
ONWAY_AMT,
ONWAY_UNIT,
ONWAY_INV_AMT,
ORDER_YN,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE ${DATA_LIFE_BASE} = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
;

.export @LOAD_ROWCNT updatecnt;
-- SQL for table: EDW_AROBO_CUSFUNDS_PRESTAGE
/* TRANSFORM_DATA */

/* 1.Truncate 目的表 */
TRUNCATE TABLE ${TARGET_SCHEMA}.${TARGET_TABLE};

-- Trinity SQL Script
/* 
2. 抽取 正式區Stage DATA_EXCH_DATE='#資料交換期別#' 之資料
3. 遮罩後寫入驗證區Prestage 
*/
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
CUS_CODE,
IPMSET_CODE,
BANK_PRO_CODE,
PRO_CODE,
PRO_CUR_CODE,
FIRST_BUY_DATE,
INV_TYPE,
INV_CUR_CODE,
INV_AMT_FC,
INV_AMT_LC,
BUY_PRICE,
UNIT,
PRICE,
PRICE_DATE,
FX_RATE,
FX_DATE,
MKT_AMT_FC,
MKT_AMT_LC,
UPL_FC,
UPL_DIVIDEND_FC,
UPL_LC,
UPL_DIVIDEND_LC,
URETURN_FC,
URETURN_DIVIDEND_FC,
URETURN_LC,
URETURN_DIVIDEND_LC,
DIV_AMT_FC,
DIV_AMT_LC,
ONWAY_AMT,
ONWAY_UNIT,
ONWAY_INV_AMT,
ORDER_YN,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
CUS_CODE,
IPMSET_CODE,
BANK_PRO_CODE,
PRO_CODE,
PRO_CUR_CODE,
FIRST_BUY_DATE,
INV_TYPE,
INV_CUR_CODE,
INV_AMT_FC,
INV_AMT_LC,
BUY_PRICE,
UNIT,
PRICE,
PRICE_DATE,
FX_RATE,
FX_DATE,
MKT_AMT_FC,
MKT_AMT_LC,
UPL_FC,
UPL_DIVIDEND_FC,
UPL_LC,
UPL_DIVIDEND_LC,
URETURN_FC,
URETURN_DIVIDEND_FC,
URETURN_LC,
URETURN_DIVIDEND_LC,
DIV_AMT_FC,
DIV_AMT_LC,
ONWAY_AMT,
ONWAY_UNIT,
ONWAY_INV_AMT,
ORDER_YN,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE ${DATA_LIFE_BASE} = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
;

.export @LOAD_ROWCNT updatecnt;
-- SQL for table: EDW_AROBO_CUSFUNDS_PRESTAGE
/* TRANSFORM_DATA */

/* 1.Truncate 目的表 */
TRUNCATE TABLE ${TARGET_SCHEMA}.${TARGET_TABLE};

-- Trinity SQL Script
/* 
2. 抽取 正式區Stage DATA_EXCH_DATE='#資料交換期別#' 之資料
3. 遮罩後寫入驗證區Prestage 
*/
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
CUS_CODE,
IPMSET_CODE,
BANK_PRO_CODE,
PRO_CODE,
PRO_CUR_CODE,
FIRST_BUY_DATE,
INV_TYPE,
INV_CUR_CODE,
INV_AMT_FC,
INV_AMT_LC,
BUY_PRICE,
UNIT,
PRICE,
PRICE_DATE,
FX_RATE,
FX_DATE,
MKT_AMT_FC,
MKT_AMT_LC,
UPL_FC,
UPL_DIVIDEND_FC,
UPL_LC,
UPL_DIVIDEND_LC,
URETURN_FC,
URETURN_DIVIDEND_FC,
URETURN_LC,
URETURN_DIVIDEND_LC,
DIV_AMT_FC,
DIV_AMT_LC,
ONWAY_AMT,
ONWAY_UNIT,
ONWAY_INV_AMT,
ORDER_YN,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
CUS_CODE,
IPMSET_CODE,
BANK_PRO_CODE,
PRO_CODE,
PRO_CUR_CODE,
FIRST_BUY_DATE,
INV_TYPE,
INV_CUR_CODE,
INV_AMT_FC,
INV_AMT_LC,
BUY_PRICE,
UNIT,
PRICE,
PRICE_DATE,
FX_RATE,
FX_DATE,
MKT_AMT_FC,
MKT_AMT_LC,
UPL_FC,
UPL_DIVIDEND_FC,
UPL_LC,
UPL_DIVIDEND_LC,
URETURN_FC,
URETURN_DIVIDEND_FC,
URETURN_LC,
URETURN_DIVIDEND_LC,
DIV_AMT_FC,
DIV_AMT_LC,
ONWAY_AMT,
ONWAY_UNIT,
ONWAY_INV_AMT,
ORDER_YN,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE ${DATA_LIFE_BASE} = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
;

.export @LOAD_ROWCNT updatecnt;
-- SQL for table: EDW_AROBO_CUSFUNDS_PRESTAGE
/* TRANSFORM_DATA */

/* 1.Truncate 目的表 */
TRUNCATE TABLE ${TARGET_SCHEMA}.${TARGET_TABLE};

-- Trinity SQL Script
/* 
2. 抽取 正式區Stage DATA_EXCH_DATE='#資料交換期別#' 之資料
3. 遮罩後寫入驗證區Prestage 
*/
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
CUS_CODE,
IPMSET_CODE,
BANK_PRO_CODE,
PRO_CODE,
PRO_CUR_CODE,
FIRST_BUY_DATE,
INV_TYPE,
INV_CUR_CODE,
INV_AMT_FC,
INV_AMT_LC,
BUY_PRICE,
UNIT,
PRICE,
PRICE_DATE,
FX_RATE,
FX_DATE,
MKT_AMT_FC,
MKT_AMT_LC,
UPL_FC,
UPL_DIVIDEND_FC,
UPL_LC,
UPL_DIVIDEND_LC,
URETURN_FC,
URETURN_DIVIDEND_FC,
URETURN_LC,
URETURN_DIVIDEND_LC,
DIV_AMT_FC,
DIV_AMT_LC,
ONWAY_AMT,
ONWAY_UNIT,
ONWAY_INV_AMT,
ORDER_YN,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
CUS_CODE,
IPMSET_CODE,
BANK_PRO_CODE,
PRO_CODE,
PRO_CUR_CODE,
FIRST_BUY_DATE,
INV_TYPE,
INV_CUR_CODE,
INV_AMT_FC,
INV_AMT_LC,
BUY_PRICE,
UNIT,
PRICE,
PRICE_DATE,
FX_RATE,
FX_DATE,
MKT_AMT_FC,
MKT_AMT_LC,
UPL_FC,
UPL_DIVIDEND_FC,
UPL_LC,
UPL_DIVIDEND_LC,
URETURN_FC,
URETURN_DIVIDEND_FC,
URETURN_LC,
URETURN_DIVIDEND_LC,
DIV_AMT_FC,
DIV_AMT_LC,
ONWAY_AMT,
ONWAY_UNIT,
ONWAY_INV_AMT,
ORDER_YN,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE ${DATA_LIFE_BASE} = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
;

.export @LOAD_ROWCNT updatecnt;
-- SQL for table: EDW_AROBO_CUSFUNDS_PRESTAGE
/* TRANSFORM_DATA */

/* 1.Truncate 目的表 */
TRUNCATE TABLE ${TARGET_SCHEMA}.${TARGET_TABLE};

-- Trinity SQL Script
/* 
2. 抽取 正式區Stage DATA_EXCH_DATE='#資料交換期別#' 之資料
3. 遮罩後寫入驗證區Prestage 
*/
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
CUS_CODE,
IPMSET_CODE,
BANK_PRO_CODE,
PRO_CODE,
PRO_CUR_CODE,
FIRST_BUY_DATE,
INV_TYPE,
INV_CUR_CODE,
INV_AMT_FC,
INV_AMT_LC,
BUY_PRICE,
UNIT,
PRICE,
PRICE_DATE,
FX_RATE,
FX_DATE,
MKT_AMT_FC,
MKT_AMT_LC,
UPL_FC,
UPL_DIVIDEND_FC,
UPL_LC,
UPL_DIVIDEND_LC,
URETURN_FC,
URETURN_DIVIDEND_FC,
URETURN_LC,
URETURN_DIVIDEND_LC,
DIV_AMT_FC,
DIV_AMT_LC,
ONWAY_AMT,
ONWAY_UNIT,
ONWAY_INV_AMT,
ORDER_YN,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
CUS_CODE,
IPMSET_CODE,
BANK_PRO_CODE,
PRO_CODE,
PRO_CUR_CODE,
FIRST_BUY_DATE,
INV_TYPE,
INV_CUR_CODE,
INV_AMT_FC,
INV_AMT_LC,
BUY_PRICE,
UNIT,
PRICE,
PRICE_DATE,
FX_RATE,
FX_DATE,
MKT_AMT_FC,
MKT_AMT_LC,
UPL_FC,
UPL_DIVIDEND_FC,
UPL_LC,
UPL_DIVIDEND_LC,
URETURN_FC,
URETURN_DIVIDEND_FC,
URETURN_LC,
URETURN_DIVIDEND_LC,
DIV_AMT_FC,
DIV_AMT_LC,
ONWAY_AMT,
ONWAY_UNIT,
ONWAY_INV_AMT,
ORDER_YN,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE ${DATA_LIFE_BASE} = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
;

.export @LOAD_ROWCNT updatecnt;
