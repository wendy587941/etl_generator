-- SQL for table: EDW_NCARD_SETUPPRODUCT
/* CHECK_DATA */

-- Trinity SQL Script
INSERT INTO ${TARGET_SCHEMA}.${TASK_NAME}_CHK
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'FIRST_CARD_TERM' AS DATA_CHK_COL,
FIRST_CARD_TERM AS DATA_VAL,
SDG.UFN_NUMCHECK(FIRST_CARD_TERM) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'FIRST_IC_CARD_TERM' AS DATA_CHK_COL,
FIRST_IC_CARD_TERM AS DATA_VAL,
SDG.UFN_NUMCHECK(FIRST_IC_CARD_TERM) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CARD_TERM' AS DATA_CHK_COL,
CARD_TERM AS DATA_VAL,
SDG.UFN_NUMCHECK(CARD_TERM) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'IC_CARD_TERM' AS DATA_CHK_COL,
IC_CARD_TERM AS DATA_VAL,
SDG.UFN_NUMCHECK(IC_CARD_TERM) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CARD_REVIEW_TERM' AS DATA_CHK_COL,
CARD_REVIEW_TERM AS DATA_VAL,
SDG.UFN_NUMCHECK(CARD_REVIEW_TERM) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'BEG_NBR' AS DATA_CHK_COL,
BEG_NBR AS DATA_VAL,
SDG.UFN_NUMCHECK(BEG_NBR) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'END_NBR' AS DATA_CHK_COL,
END_NBR AS DATA_VAL,
SDG.UFN_NUMCHECK(END_NBR) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'INCREMENT_BY' AS DATA_CHK_COL,
INCREMENT_BY AS DATA_VAL,
SDG.UFN_NUMCHECK(INCREMENT_BY) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'LAST_NBR_ASSIGNED' AS DATA_CHK_COL,
LAST_NBR_ASSIGNED AS DATA_VAL,
SDG.UFN_NUMCHECK(LAST_NBR_ASSIGNED) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'COUNTRY_FEE_PCT' AS DATA_CHK_COL,
COUNTRY_FEE_PCT AS DATA_VAL,
SDG.UFN_NUMCHECK(COUNTRY_FEE_PCT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CURRENCY_FEE_PCT' AS DATA_CHK_COL,
CURRENCY_FEE_PCT AS DATA_VAL,
SDG.UFN_NUMCHECK(CURRENCY_FEE_PCT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'ISSUER_FEE_PCT' AS DATA_CHK_COL,
ISSUER_FEE_PCT AS DATA_VAL,
SDG.UFN_NUMCHECK(ISSUER_FEE_PCT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CR_COUNTRY_FEE_PCT' AS DATA_CHK_COL,
CR_COUNTRY_FEE_PCT AS DATA_VAL,
SDG.UFN_NUMCHECK(CR_COUNTRY_FEE_PCT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CR_CURRENCY_FEE_PCT' AS DATA_CHK_COL,
CR_CURRENCY_FEE_PCT AS DATA_VAL,
SDG.UFN_NUMCHECK(CR_CURRENCY_FEE_PCT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CR_ISSUER_FEE_PCT' AS DATA_CHK_COL,
CR_ISSUER_FEE_PCT AS DATA_VAL,
SDG.UFN_NUMCHECK(CR_ISSUER_FEE_PCT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'USER_AMT_1' AS DATA_CHK_COL,
USER_AMT_1 AS DATA_VAL,
SDG.UFN_NUMCHECK(USER_AMT_1) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'USER_AMT_2' AS DATA_CHK_COL,
USER_AMT_2 AS DATA_VAL,
SDG.UFN_NUMCHECK(USER_AMT_2) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'USER_AMT_3' AS DATA_CHK_COL,
USER_AMT_3 AS DATA_VAL,
SDG.UFN_NUMCHECK(USER_AMT_3) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'USER_AMT_4' AS DATA_CHK_COL,
USER_AMT_4 AS DATA_VAL,
SDG.UFN_NUMCHECK(USER_AMT_4) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'USER_AMT_5' AS DATA_CHK_COL,
USER_AMT_5 AS DATA_VAL,
SDG.UFN_NUMCHECK(USER_AMT_5) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'AFFINITY_REBATE_RATE' AS DATA_CHK_COL,
AFFINITY_REBATE_RATE AS DATA_VAL,
SDG.UFN_NUMCHECK(AFFINITY_REBATE_RATE) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0';

/* need to modify above 記得要有;號*/
DELETE FROM SDG.SDG_DATA_ERR_TBL WHERE TAB_NM='${TARGET_TABLE}' AND GROUP_CD='${EXEC_GCD}' AND BD_EXCH_DATE=TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd') AND BD_EXCH_TIME='${BD_EXCH_TIME}';

INSERT INTO SDG.SDG_DATA_ERR_TBL
SELECT
'${TARGET_TABLE}' AS TAB_NM,
'${EXEC_GCD}' AS GROUP_CD,
TO_DATE('${BD_EXCH_DATE}', 'YYYY-MM-DD') AS BD_EXCH_DATE,
'${BD_EXCH_TIME}' AS BD_EXCH_TIME,
C1.DATA_CHK_TP,
C1.DATA_CHK_COL,
C1.DATA_VAL,
S1.SRC_PK,
CURRENT_TIMESTAMP AS UPDATE_DATETIME
FROM
(
SELECT * FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK
) C1
LEFT JOIN 
(
SELECT CAST(ROWID AS VARCHAR2(100)) AS CHK_ID , ${SQL_STMT} AS SRC_PK FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
) S1
ON C1.CHK_ID=S1.CHK_ID
;

-- SQL for table: EDW_NCARD_SETUPPRODUCT
/* TRANSFORM_DATA */

-- 異動方式待補/待調整，以下目前為公版
/* 1. 刪除Base DATA_EXCH_DATE='#資料交換期別#' 之資料 */
DELETE FROM ${TARGET_SCHEMA}.${TARGET_TABLE} WHERE DATA_EXCH_DATE = TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd');

-- Trinity SQL Script
/* 2. 抽取Stage DATA_EXCH_DATE = '#資料交換期別#'之資料進行新增 */
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
BU,
PRODUCT,
DESCR,
DESCR_SHORT,
PIC_URL,
QTRLY_AFFILIATE,
CARD_TECHNOLOGY,
IC_TEMPLATE,
CLASS_1,
CLASS_2,
CARD_GROUP,
CO_BRAND_NAME,
FIRST_CARD_TERM,
FIRST_IC_CARD_TERM,
CARD_TERM,
IC_CARD_TERM,
CARD_REVIEW_TERM,
SERVICE_CODE,
IC_SERVICE_CODE,
BEG_NBR,
END_NBR,
INCREMENT_BY,
LAST_NBR_ASSIGNED,
CARD_ISSUE_DTE,
CARD_ISSUE_DTE_LAST,
STOP_ISSUE_DTE,
CARD_APPLY_DUP,
PRODUCT_SERVICE_1,
PRODUCT_SERVICE_2,
PRODUCT_SERVICE_3,
PRODUCT_SERVICE_4,
PRODUCT_SERVICE_5,
PRODUCT_SERVICE_6,
PRODUCT_SERVICE_7,
PRODUCT_SERVICE_8,
OS_TYPE,
OS_DEBIT_ACTION,
COUNTRY_FEE_PCT,
CURRENCY_FEE_PCT,
ISSUER_FEE_PCT,
ORG_FEE_ACTION,
ISSUER_FEE_ACTION,
OS_CREDIT_ACTION,
CR_COUNTRY_FEE_PCT,
CR_CURRENCY_FEE_PCT,
CR_ISSUER_FEE_PCT,
CR_ORG_FEE_ACTION,
CR_ISSUER_FEE_ACTION,
USER_AMT_1,
USER_AMT_2,
USER_AMT_3,
USER_AMT_4,
USER_AMT_5,
AFFINITY_REBATE_RATE,
CARD_NBR_ACTION,
PRIORITY,
POST_PRIORITY,
ACTIVITY_PRIORITY,
DC_BU_1,
DC_BU_2,
POST_BASE,
POST_RESULT,
MNT_DT,
MNT_USER,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
BU,
PRODUCT,
DESCR,
DESCR_SHORT,
PIC_URL,
QTRLY_AFFILIATE,
CARD_TECHNOLOGY,
IC_TEMPLATE,
CLASS_1,
CLASS_2,
CARD_GROUP,
CO_BRAND_NAME,
FIRST_CARD_TERM,
FIRST_IC_CARD_TERM,
CARD_TERM,
IC_CARD_TERM,
CARD_REVIEW_TERM,
SERVICE_CODE,
IC_SERVICE_CODE,
BEG_NBR,
END_NBR,
INCREMENT_BY,
LAST_NBR_ASSIGNED,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(CARD_ISSUE_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(CARD_ISSUE_DTE))='0' THEN NULL ELSE CARD_ISSUE_DTE END) AS CARD_ISSUE_DTE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(CARD_ISSUE_DTE_LAST), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(CARD_ISSUE_DTE_LAST))='0' THEN NULL ELSE CARD_ISSUE_DTE_LAST END) AS CARD_ISSUE_DTE_LAST,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(STOP_ISSUE_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(STOP_ISSUE_DTE))='0' THEN NULL ELSE STOP_ISSUE_DTE END) AS STOP_ISSUE_DTE,
CARD_APPLY_DUP,
PRODUCT_SERVICE_1,
PRODUCT_SERVICE_2,
PRODUCT_SERVICE_3,
PRODUCT_SERVICE_4,
PRODUCT_SERVICE_5,
PRODUCT_SERVICE_6,
PRODUCT_SERVICE_7,
PRODUCT_SERVICE_8,
OS_TYPE,
OS_DEBIT_ACTION,
COUNTRY_FEE_PCT,
CURRENCY_FEE_PCT,
ISSUER_FEE_PCT,
ORG_FEE_ACTION,
ISSUER_FEE_ACTION,
OS_CREDIT_ACTION,
CR_COUNTRY_FEE_PCT,
CR_CURRENCY_FEE_PCT,
CR_ISSUER_FEE_PCT,
CR_ORG_FEE_ACTION,
CR_ISSUER_FEE_ACTION,
USER_AMT_1,
USER_AMT_2,
USER_AMT_3,
USER_AMT_4,
USER_AMT_5,
AFFINITY_REBATE_RATE,
CARD_NBR_ACTION,
PRIORITY,
POST_PRIORITY,
ACTIVITY_PRIORITY,
DC_BU_1,
DC_BU_2,
POST_BASE,
POST_RESULT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(MNT_DT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(MNT_DT))='0' THEN NULL ELSE MNT_DT END) AS MNT_DT,
MNT_USER,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE DATA_EXCH_DATE = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
AND CAST(ROWID AS VARCHAR2(100)) NOT IN (SELECT DISTINCT CHK_ID FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK WHERE DATA_CHK_TP LIKE '%err');

.export @LOAD_ROWCNT updatecnt;
