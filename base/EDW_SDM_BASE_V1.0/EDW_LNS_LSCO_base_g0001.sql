-- SQL for table: EDW_LNS_LSCO
/* CHECK_DATA */

-- Trinity SQL Script
INSERT INTO ${TARGET_SCHEMA}.${TASK_NAME}_CHK
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CONAMT' AS DATA_CHK_COL,
CONAMT AS DATA_VAL,
SDG.UFN_NUMCHECK(CONAMT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'ACTBAL' AS DATA_CHK_COL,
ACTBAL AS DATA_VAL,
SDG.UFN_NUMCHECK(ACTBAL) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'UPINT' AS DATA_CHK_COL,
UPINT AS DATA_VAL,
SDG.UFN_NUMCHECK(UPINT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'NUMRL' AS DATA_CHK_COL,
NUMRL AS DATA_VAL,
SDG.UFN_NUMCHECK(NUMRL) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'INTTOT' AS DATA_CHK_COL,
INTTOT AS DATA_VAL,
SDG.UFN_NUMCHECK(INTTOT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'PRDTOT' AS DATA_CHK_COL,
PRDTOT AS DATA_VAL,
SDG.UFN_NUMCHECK(PRDTOT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'ISTPRT' AS DATA_CHK_COL,
ISTPRT AS DATA_VAL,
SDG.UFN_NUMCHECK(ISTPRT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'LITFEE' AS DATA_CHK_COL,
LITFEE AS DATA_VAL,
SDG.UFN_NUMCHECK(LITFEE) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'IXPR' AS DATA_CHK_COL,
IXPR AS DATA_VAL,
SDG.UFN_NUMCHECK(IXPR) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'FITIRT' AS DATA_CHK_COL,
FITIRT AS DATA_VAL,
SDG.UFN_NUMCHECK(FITIRT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'R25INT' AS DATA_CHK_COL,
R25INT AS DATA_VAL,
SDG.UFN_NUMCHECK(R25INT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0';

/* need to modify above 記得要有;號*/
DELETE FROM SDG.SDG_DATA_ERR_TBL WHERE TAB_NM='${TARGET_TABLE}' AND GROUP_CD='${EXEC_GCD}' AND BD_EXCH_DATE=TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd') AND BD_EXCH_TIME='${BD_EXCH_TIME}';

INSERT INTO SDG.SDG_DATA_ERR_TBL
SELECT
'${TARGET_TABLE}' AS TAB_NM,
'${EXEC_GCD}' AS GROUP_CD,
TO_DATE('${BD_EXCH_DATE}', 'YYYY-MM-DD') AS BD_EXCH_DATE,
'${BD_EXCH_TIME}' AS BD_EXCH_TIME,
C1.DATA_CHK_TP,
C1.DATA_CHK_COL,
C1.DATA_VAL,
S1.SRC_PK,
CURRENT_TIMESTAMP AS UPDATE_DATETIME
FROM
(
SELECT * FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK
) C1
LEFT JOIN 
(
SELECT CAST(ROWID AS VARCHAR2(100)) AS CHK_ID , ${SQL_STMT} AS SRC_PK FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
) S1
ON C1.CHK_ID=S1.CHK_ID
;

-- SQL for table: EDW_LNS_LSCO
/* TRANSFORM_DATA */

-- 異動方式待補/待調整，以下目前為公版
/* 1. 刪除Base DATA_EXCH_DATE='#資料交換期別#' 之資料 */
DELETE FROM ${TARGET_SCHEMA}.${TARGET_TABLE} WHERE DATA_EXCH_DATE = TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd');

-- Trinity SQL Script
/* 2. 抽取Stage DATA_EXCH_DATE = '#資料交換期別#'之資料進行新增 */
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
ACTNO,
BRNO,
APNO,
SRNO,
CHKDG,
NAME,
PIDNO,
PIDERR,
APSQNO,
CSQNO,
SAPNO,
ACTCLS,
DMCD,
CONAMT,
ACTBAL,
UPINT,
CSDATE,
CEDATE,
IRDATE,
LASTDT,
ISTSDT,
IPACTN,
NUMRL,
NUMEDT,
TRPACT,
TELA,
TELB,
GRADATE,
INTTOT,
OIDATE,
IDATE,
OPRDT,
PRDATE,
EDAY,
PRDTOT,
ISTPRT,
ATWORK,
NTXDAY,
LITFEE,
IRCD,
IXPR,
DTYPE,
FITIRT,
R25INT,
ATWORKINTE,
ATWORKARMY,
LIFLAG,
LISDAY,
LIEDAY,
ORIATWORK,
DATALISTFG,
STXCD,
STXDAY,
SKINBR,
BIRDATE,
CNO,
ACHDT,
ACHFG,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
BRNO||APNO||SRNO||CHKDG,
BRNO,
APNO,
SRNO,
CHKDG,
NAME,
PIDNO,
PIDERR,
APSQNO,
CSQNO,
SAPNO,
ACTCLS,
DMCD,
CONAMT,
ACTBAL,
UPINT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(CSDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(CSDATE))='0' THEN NULL ELSE CSDATE END) AS CSDATE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(CEDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(CEDATE))='0' THEN NULL ELSE CEDATE END) AS CEDATE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(IRDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(IRDATE))='0' THEN NULL ELSE IRDATE END) AS IRDATE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(LASTDT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(LASTDT))='0' THEN NULL ELSE LASTDT END) AS LASTDT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ISTSDT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ISTSDT))='0' THEN NULL ELSE ISTSDT END) AS ISTSDT,
IPACTN,
NUMRL,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(NUMEDT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(NUMEDT))='0' THEN NULL ELSE NUMEDT END) AS NUMEDT,
TRPACT,
TELA,
TELB,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(GRADATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(GRADATE))='0' THEN NULL ELSE GRADATE END) AS GRADATE,
INTTOT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(OIDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(OIDATE))='0' THEN NULL ELSE OIDATE END) AS OIDATE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(IDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(IDATE))='0' THEN NULL ELSE IDATE END) AS IDATE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(OPRDT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(OPRDT))='0' THEN NULL ELSE OPRDT END) AS OPRDT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(PRDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(PRDATE))='0' THEN NULL ELSE PRDATE END) AS PRDATE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(EDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(EDAY))='0' THEN NULL ELSE EDAY END) AS EDAY,
PRDTOT,
ISTPRT,
ATWORK,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(NTXDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(NTXDAY))='0' THEN NULL ELSE NTXDAY END) AS NTXDAY,
LITFEE,
IRCD,
IXPR,
DTYPE,
FITIRT,
R25INT,
ATWORKINTE,
ATWORKARMY,
LIFLAG,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(LISDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(LISDAY))='0' THEN NULL ELSE LISDAY END) AS LISDAY,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(LIEDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(LIEDAY))='0' THEN NULL ELSE LIEDAY END) AS LIEDAY,
ORIATWORK,
DATALISTFG,
STXCD,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(STXDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(STXDAY))='0' THEN NULL ELSE STXDAY END) AS STXDAY,
SKINBR,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(BIRDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(BIRDATE))='0' THEN NULL ELSE BIRDATE END) AS BIRDATE,
CNO,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ACHDT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ACHDT))='0' THEN NULL ELSE ACHDT END) AS ACHDT,
ACHFG,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE DATA_EXCH_DATE = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
AND CAST(ROWID AS VARCHAR2(100)) NOT IN (SELECT DISTINCT CHK_ID FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK WHERE DATA_CHK_TP LIKE '%err');

.export @LOAD_ROWCNT updatecnt;
