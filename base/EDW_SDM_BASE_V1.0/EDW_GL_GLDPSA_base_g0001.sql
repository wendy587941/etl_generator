-- SQL for table: EDW_GL_GLDPSA
/* CHECK_DATA */

-- Trinity SQL Script
INSERT INTO ${TARGET_SCHEMA}.${TASK_NAME}_CHK
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'SQNO' AS DATA_CHK_COL,
SQNO AS DATA_VAL,
SDG.UFN_NUMCHECK(SQNO) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CHARGE' AS DATA_CHK_COL,
CHARGE AS DATA_VAL,
SDG.UFN_NUMCHECK(CHARGE) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'AMT' AS DATA_CHK_COL,
AMT AS DATA_VAL,
SDG.UFN_NUMCHECK(AMT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'SUBRATE_1' AS DATA_CHK_COL,
SUBRATE_1 AS DATA_VAL,
SDG.UFN_NUMCHECK(SUBRATE_1) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'SUBAMT_1' AS DATA_CHK_COL,
SUBAMT_1 AS DATA_VAL,
SDG.UFN_NUMCHECK(SUBAMT_1) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'SUBRATE_2' AS DATA_CHK_COL,
SUBRATE_2 AS DATA_VAL,
SDG.UFN_NUMCHECK(SUBRATE_2) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'SUBAMT_2' AS DATA_CHK_COL,
SUBAMT_2 AS DATA_VAL,
SDG.UFN_NUMCHECK(SUBAMT_2) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'SUBRATE_3' AS DATA_CHK_COL,
SUBRATE_3 AS DATA_VAL,
SDG.UFN_NUMCHECK(SUBRATE_3) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'SUBAMT_3' AS DATA_CHK_COL,
SUBAMT_3 AS DATA_VAL,
SDG.UFN_NUMCHECK(SUBAMT_3) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'ADDRATE_1' AS DATA_CHK_COL,
ADDRATE_1 AS DATA_VAL,
SDG.UFN_NUMCHECK(ADDRATE_1) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'ADDAMT_1' AS DATA_CHK_COL,
ADDAMT_1 AS DATA_VAL,
SDG.UFN_NUMCHECK(ADDAMT_1) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'ADDRATE_2' AS DATA_CHK_COL,
ADDRATE_2 AS DATA_VAL,
SDG.UFN_NUMCHECK(ADDRATE_2) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'ADDAMT_2' AS DATA_CHK_COL,
ADDAMT_2 AS DATA_VAL,
SDG.UFN_NUMCHECK(ADDAMT_2) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'ADDRATE_3' AS DATA_CHK_COL,
ADDRATE_3 AS DATA_VAL,
SDG.UFN_NUMCHECK(ADDRATE_3) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'ADDAMT_3' AS DATA_CHK_COL,
ADDAMT_3 AS DATA_VAL,
SDG.UFN_NUMCHECK(ADDAMT_3) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'ERRCNT' AS DATA_CHK_COL,
ERRCNT AS DATA_VAL,
SDG.UFN_NUMCHECK(ERRCNT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0';

/* need to modify above 記得要有;號*/
DELETE FROM SDG.SDG_DATA_ERR_TBL WHERE TAB_NM='${TARGET_TABLE}' AND GROUP_CD='${EXEC_GCD}' AND BD_EXCH_DATE=TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd') AND BD_EXCH_TIME='${BD_EXCH_TIME}';

INSERT INTO SDG.SDG_DATA_ERR_TBL
SELECT
'${TARGET_TABLE}' AS TAB_NM,
'${EXEC_GCD}' AS GROUP_CD,
TO_DATE('${BD_EXCH_DATE}', 'YYYY-MM-DD') AS BD_EXCH_DATE,
'${BD_EXCH_TIME}' AS BD_EXCH_TIME,
C1.DATA_CHK_TP,
C1.DATA_CHK_COL,
C1.DATA_VAL,
S1.SRC_PK,
CURRENT_TIMESTAMP AS UPDATE_DATETIME
FROM
(
SELECT * FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK
) C1
LEFT JOIN 
(
SELECT CAST(ROWID AS VARCHAR2(100)) AS CHK_ID , ${SQL_STMT} AS SRC_PK FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
) S1
ON C1.CHK_ID=S1.CHK_ID
;

-- SQL for table: EDW_GL_GLDPSA
/* TRANSFORM_DATA */

-- 異動方式待補/待調整，以下目前為公版
/* 1. 刪除Base DATA_EXCH_DATE='#資料交換期別#' 之資料 */
DELETE FROM ${TARGET_SCHEMA}.${TARGET_TABLE} WHERE DATA_EXCH_DATE = TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd');

-- Trinity SQL Script
/* 2. 抽取Stage DATA_EXCH_DATE = '#資料交換期別#'之資料進行新增 */
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
ACTNO,
BRNO,
APNO,
SRNO,
CHKDG,
CURCD,
SQNO,
STA,
SAACTNO,
SABRNO,
SAAPNO,
SASRNO,
SACHKDG,
CHARGE,
STPSYYMM,
STPEYYMM,
AMT,
VALDAY,
RATEFG,
SUBFG_1,
SUBRATE_1,
SUBAMT_1,
SUBFG_2,
SUBRATE_2,
SUBAMT_2,
SUBFG_3,
SUBRATE_3,
SUBAMT_3,
ADDFG_1,
ADDRATE_1,
ADDAMT_1,
ADDFG_2,
ADDRATE_2,
ADDAMT_2,
ADDFG_3,
ADDRATE_3,
ADDAMT_3,
"SOURCE",
KINBR,
TLRNO,
LTXDAY,
ERRCNT,
CRDAY,
EMAILFG,
CPHONEFG,
FILLER,
EMPNO,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
BRNO||APNO||SRNO||CHKDG,
BRNO,
APNO,
SRNO,
CHKDG,
CURCD,
SQNO,
STA,
SABRNO||SAAPNO||SASRNO||SACHKDG,
SABRNO,
SAAPNO,
SASRNO,
SACHKDG,
CHARGE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(STPSYYMM), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(STPSYYMM))='0' THEN NULL ELSE STPSYYMM END) AS STPSYYMM,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(STPEYYMM), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(STPEYYMM))='0' THEN NULL ELSE STPEYYMM END) AS STPEYYMM,
AMT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(VALDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(VALDAY))='0' THEN NULL ELSE VALDAY END) AS VALDAY,
RATEFG,
SUBFG_1,
SUBRATE_1,
SUBAMT_1,
SUBFG_2,
SUBRATE_2,
SUBAMT_2,
SUBFG_3,
SUBRATE_3,
SUBAMT_3,
ADDFG_1,
ADDRATE_1,
ADDAMT_1,
ADDFG_2,
ADDRATE_2,
ADDAMT_2,
ADDFG_3,
ADDRATE_3,
ADDAMT_3,
"SOURCE",
KINBR,
TLRNO,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(LTXDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(LTXDAY))='0' THEN NULL ELSE LTXDAY END) AS LTXDAY,
ERRCNT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(CRDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(CRDAY))='0' THEN NULL ELSE CRDAY END) AS CRDAY,
EMAILFG,
CPHONEFG,
FILLER,
EMPNO,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE DATA_EXCH_DATE = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
AND CAST(ROWID AS VARCHAR2(100)) NOT IN (SELECT DISTINCT CHK_ID FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK WHERE DATA_CHK_TP LIKE '%err');

.export @LOAD_ROWCNT updatecnt;
