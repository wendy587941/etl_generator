-- SQL for table: EDW_NCARD_CUSTINF
/* CHECK_DATA */

-- Trinity SQL Script
INSERT INTO ${TARGET_SCHEMA}.${TASK_NAME}_CHK
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'HOME_LIFE_YEAR' AS DATA_CHK_COL,
HOME_LIFE_YEAR AS DATA_VAL,
SDG.UFN_NUMCHECK(HOME_LIFE_YEAR) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'ANNUAL_SALARY' AS DATA_CHK_COL,
ANNUAL_SALARY AS DATA_VAL,
SDG.UFN_NUMCHECK(ANNUAL_SALARY) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'EMP_ANNUAL_SALARY_2' AS DATA_CHK_COL,
EMP_ANNUAL_SALARY_2 AS DATA_VAL,
SDG.UFN_NUMCHECK(EMP_ANNUAL_SALARY_2) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'USER_AMT_1' AS DATA_CHK_COL,
USER_AMT_1 AS DATA_VAL,
SDG.UFN_NUMCHECK(USER_AMT_1) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'USER_AMT_2' AS DATA_CHK_COL,
USER_AMT_2 AS DATA_VAL,
SDG.UFN_NUMCHECK(USER_AMT_2) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'USER_AMT_3' AS DATA_CHK_COL,
USER_AMT_3 AS DATA_VAL,
SDG.UFN_NUMCHECK(USER_AMT_3) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'USER_AMT_4' AS DATA_CHK_COL,
USER_AMT_4 AS DATA_VAL,
SDG.UFN_NUMCHECK(USER_AMT_4) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'USER_AMT_5' AS DATA_CHK_COL,
USER_AMT_5 AS DATA_VAL,
SDG.UFN_NUMCHECK(USER_AMT_5) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0';

/* need to modify above 記得要有;號*/
DELETE FROM SDG.SDG_DATA_ERR_TBL WHERE TAB_NM='${TARGET_TABLE}' AND GROUP_CD='${EXEC_GCD}' AND BD_EXCH_DATE=TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd') AND BD_EXCH_TIME='${BD_EXCH_TIME}';

INSERT INTO SDG.SDG_DATA_ERR_TBL
SELECT
'${TARGET_TABLE}' AS TAB_NM,
'${EXEC_GCD}' AS GROUP_CD,
TO_DATE('${BD_EXCH_DATE}', 'YYYY-MM-DD') AS BD_EXCH_DATE,
'${BD_EXCH_TIME}' AS BD_EXCH_TIME,
C1.DATA_CHK_TP,
C1.DATA_CHK_COL,
C1.DATA_VAL,
S1.SRC_PK,
CURRENT_TIMESTAMP AS UPDATE_DATETIME
FROM
(
SELECT * FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK
) C1
LEFT JOIN 
(
SELECT CAST(ROWID AS VARCHAR2(100)) AS CHK_ID , ${SQL_STMT} AS SRC_PK FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
) S1
ON C1.CHK_ID=S1.CHK_ID
;

-- SQL for table: EDW_NCARD_CUSTINF
/* TRANSFORM_DATA */

-- 異動方式待補/待調整，以下目前為公版
/* 1. 刪除Base DATA_EXCH_DATE='#資料交換期別#' 之資料 */
DELETE FROM ${TARGET_SCHEMA}.${TARGET_TABLE} WHERE DATA_EXCH_DATE = TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd');

-- Trinity SQL Script
/* 2. 抽取Stage DATA_EXCH_DATE = '#資料交換期別#'之資料進行新增 */
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
BU,
CUST_NBR,
OPEN_DTE,
NAME,
ENG_NAME,
VIP_FLAG,
CUST_TYPE,
DOB,
SEX,
MARRIAGE,
CHILDREN,
SOCIAL_STATUS,
EMAIL_1,
EMAIL_2,
CELL_PHONE_1,
CELL_PHONE_2,
EDUCATION,
IDCARD_ISSUE_DTE,
IDCARD_ISSUE_CITY,
IDCARD_ISSUE_TYPE,
BLOOD_TYPE,
GRADUATE,
STMT_ADDR_TYPE,
ISSUE_BANK,
ADDR_BRANCH,
STMT_ACTION,
STMT_ADDR_ZIP,
STMT_ADDR_ZONE,
STMT_ADDR,
STMT_PHONE,
STMT_FX,
HOME_OWNER,
HOME_ADDR_ZIP,
HOME_ADDR_ZONE,
HOME_ADDR,
HOME_PHONE,
HOME_FX,
HOME_LIFE_YEAR,
HOME_LIVEWITH,
REGISTER_ADDR_ZIP,
REGISTER_ADDR_ZONE,
REGISTER_ADDR,
REGISTER_PHONE,
REGISTER_FX,
EMP_ADDR_ZIP,
EMP_ADDR_ZONE,
EMP_ADDR,
EMP_NAME,
EMP_ENG_NAME,
EMP_NBR,
EMP_PHONE,
EMP_FX,
EMP_INDUSTRY,
EMP_TITLE,
EMP_DTE,
EMP_OWNER,
EMP_DOB,
ANNUAL_SALARY,
ANNUAL_SALARY_DTE,
EMP_NAME_2,
EMP_TITLE_2,
EMP_PHONE_2,
EMP_EXPERIENCE_2,
EMP_ANNUAL_SALARY_2,
COMM_FLAG_1,
COMM_FLAG_2,
COMM_FLAG_3,
COMM_FLAG_4,
COMM_FLAG_5,
NATIONALITY_1,
NATIONALITY_2,
NATIONALITY_3,
PASSPORT_NBR,
PASSPORT_EXPIRE_DTE,
ARC_ISSUE_DTE,
ARC_EXPIRE_DTE,
SCHOOL_NAME,
SCHOOL_SUBJECT,
SCHOOL_GRADE,
SCHOOL_STUDENT_ID,
PAY_IND,
EMP_REL_FLAG,
REL_CODE,
PROGRAM_1,
PROGRAM_2,
PROGRAM_3,
PROGRAM_4,
PROGRAM_5,
USER_CHAR_1,
USER_CHAR_2,
USER_CHAR_3,
USER_CHAR_4,
USER_CHAR_5,
USER_CHAR_6,
USER_CHAR_7,
USER_CHAR_8,
USER_CHAR_9,
USER_CHAR_10,
USER_DTE_1,
USER_DTE_2,
USER_DTE_3,
USER_DTE_4,
USER_DTE_5,
USER_AMT_1,
USER_AMT_2,
USER_AMT_3,
USER_AMT_4,
USER_AMT_5,
POST_RESULT,
MNT_DT,
MNT_USER,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
BU,
CUST_NBR,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(OPEN_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(OPEN_DTE))='0' THEN NULL ELSE OPEN_DTE END) AS OPEN_DTE,
NAME,
ENG_NAME,
VIP_FLAG,
CUST_TYPE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(DOB), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(DOB))='0' THEN NULL ELSE DOB END) AS DOB,
SEX,
MARRIAGE,
CHILDREN,
SOCIAL_STATUS,
EMAIL_1,
EMAIL_2,
CELL_PHONE_1,
CELL_PHONE_2,
EDUCATION,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(IDCARD_ISSUE_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(IDCARD_ISSUE_DTE))='0' THEN NULL ELSE IDCARD_ISSUE_DTE END) AS IDCARD_ISSUE_DTE,
IDCARD_ISSUE_CITY,
IDCARD_ISSUE_TYPE,
BLOOD_TYPE,
GRADUATE,
STMT_ADDR_TYPE,
ISSUE_BANK,
ADDR_BRANCH,
STMT_ACTION,
STMT_ADDR_ZIP,
STMT_ADDR_ZONE,
STMT_ADDR,
STMT_PHONE,
STMT_FX,
HOME_OWNER,
HOME_ADDR_ZIP,
HOME_ADDR_ZONE,
HOME_ADDR,
HOME_PHONE,
HOME_FX,
HOME_LIFE_YEAR,
HOME_LIVEWITH,
REGISTER_ADDR_ZIP,
REGISTER_ADDR_ZONE,
REGISTER_ADDR,
REGISTER_PHONE,
REGISTER_FX,
EMP_ADDR_ZIP,
EMP_ADDR_ZONE,
EMP_ADDR,
EMP_NAME,
EMP_ENG_NAME,
EMP_NBR,
EMP_PHONE,
EMP_FX,
EMP_INDUSTRY,
EMP_TITLE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(EMP_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(EMP_DTE))='0' THEN NULL ELSE EMP_DTE END) AS EMP_DTE,
EMP_OWNER,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(EMP_DOB), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(EMP_DOB))='0' THEN NULL ELSE EMP_DOB END) AS EMP_DOB,
ANNUAL_SALARY,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ANNUAL_SALARY_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ANNUAL_SALARY_DTE))='0' THEN NULL ELSE ANNUAL_SALARY_DTE END) AS ANNUAL_SALARY_DTE,
EMP_NAME_2,
EMP_TITLE_2,
EMP_PHONE_2,
EMP_EXPERIENCE_2,
EMP_ANNUAL_SALARY_2,
COMM_FLAG_1,
COMM_FLAG_2,
COMM_FLAG_3,
COMM_FLAG_4,
COMM_FLAG_5,
NATIONALITY_1,
NATIONALITY_2,
NATIONALITY_3,
PASSPORT_NBR,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(PASSPORT_EXPIRE_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(PASSPORT_EXPIRE_DTE))='0' THEN NULL ELSE PASSPORT_EXPIRE_DTE END) AS PASSPORT_EXPIRE_DTE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ARC_ISSUE_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ARC_ISSUE_DTE))='0' THEN NULL ELSE ARC_ISSUE_DTE END) AS ARC_ISSUE_DTE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ARC_EXPIRE_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ARC_EXPIRE_DTE))='0' THEN NULL ELSE ARC_EXPIRE_DTE END) AS ARC_EXPIRE_DTE,
SCHOOL_NAME,
SCHOOL_SUBJECT,
SCHOOL_GRADE,
SCHOOL_STUDENT_ID,
PAY_IND,
EMP_REL_FLAG,
REL_CODE,
PROGRAM_1,
PROGRAM_2,
PROGRAM_3,
PROGRAM_4,
PROGRAM_5,
USER_CHAR_1,
USER_CHAR_2,
USER_CHAR_3,
USER_CHAR_4,
USER_CHAR_5,
USER_CHAR_6,
USER_CHAR_7,
USER_CHAR_8,
USER_CHAR_9,
USER_CHAR_10,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(USER_DTE_1), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(USER_DTE_1))='0' THEN NULL ELSE USER_DTE_1 END) AS USER_DTE_1,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(USER_DTE_2), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(USER_DTE_2))='0' THEN NULL ELSE USER_DTE_2 END) AS USER_DTE_2,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(USER_DTE_3), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(USER_DTE_3))='0' THEN NULL ELSE USER_DTE_3 END) AS USER_DTE_3,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(USER_DTE_4), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(USER_DTE_4))='0' THEN NULL ELSE USER_DTE_4 END) AS USER_DTE_4,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(USER_DTE_5), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(USER_DTE_5))='0' THEN NULL ELSE USER_DTE_5 END) AS USER_DTE_5,
USER_AMT_1,
USER_AMT_2,
USER_AMT_3,
USER_AMT_4,
USER_AMT_5,
POST_RESULT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(MNT_DT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(MNT_DT))='0' THEN NULL ELSE MNT_DT END) AS MNT_DT,
MNT_USER,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE DATA_EXCH_DATE = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
AND CAST(ROWID AS VARCHAR2(100)) NOT IN (SELECT DISTINCT CHK_ID FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK WHERE DATA_CHK_TP LIKE '%err');

.export @LOAD_ROWCNT updatecnt;
