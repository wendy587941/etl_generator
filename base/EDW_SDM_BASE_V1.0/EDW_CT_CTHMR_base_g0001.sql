-- SQL for table: EDW_CT_CTHMR
/* CHECK_DATA */

-- Trinity SQL Script
INSERT INTO ${TARGET_SCHEMA}.${TASK_NAME}_CHK
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'RXCNT' AS DATA_CHK_COL,
RXCNT AS DATA_VAL,
SDG.UFN_NUMCHECK(RXCNT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'AXCNT' AS DATA_CHK_COL,
AXCNT AS DATA_VAL,
SDG.UFN_NUMCHECK(AXCNT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'DAMT' AS DATA_CHK_COL,
DAMT AS DATA_VAL,
SDG.UFN_NUMCHECK(DAMT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'DCNT' AS DATA_CHK_COL,
DCNT AS DATA_VAL,
SDG.UFN_NUMCHECK(DCNT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CAMT' AS DATA_CHK_COL,
CAMT AS DATA_VAL,
SDG.UFN_NUMCHECK(CAMT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CCNT' AS DATA_CHK_COL,
CCNT AS DATA_VAL,
SDG.UFN_NUMCHECK(CCNT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'EXPER' AS DATA_CHK_COL,
EXPER AS DATA_VAL,
SDG.UFN_NUMCHECK(EXPER) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'YDBAL' AS DATA_CHK_COL,
YDBAL AS DATA_VAL,
SDG.UFN_NUMCHECK(YDBAL) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'LMPRB' AS DATA_CHK_COL,
LMPRB AS DATA_VAL,
SDG.UFN_NUMCHECK(LMPRB) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CTBAL' AS DATA_CHK_COL,
CTBAL AS DATA_VAL,
SDG.UFN_NUMCHECK(CTBAL) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'FILLER2' AS DATA_CHK_COL,
FILLER2 AS DATA_VAL,
SDG.UFN_NUMCHECK(FILLER2) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'LINECD' AS DATA_CHK_COL,
LINECD AS DATA_VAL,
SDG.UFN_NUMCHECK(LINECD) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'TFLAG' AS DATA_CHK_COL,
TFLAG AS DATA_VAL,
SDG.UFN_NUMCHECK(TFLAG) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CONNACT' AS DATA_CHK_COL,
CONNACT AS DATA_VAL,
SDG.UFN_NUMCHECK(CONNACT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0';

/* need to modify above 記得要有;號*/
DELETE FROM SDG.SDG_DATA_ERR_TBL WHERE TAB_NM='${TARGET_TABLE}' AND GROUP_CD='${EXEC_GCD}' AND BD_EXCH_DATE=TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd') AND BD_EXCH_TIME='${BD_EXCH_TIME}';

INSERT INTO SDG.SDG_DATA_ERR_TBL
SELECT
'${TARGET_TABLE}' AS TAB_NM,
'${EXEC_GCD}' AS GROUP_CD,
TO_DATE('${BD_EXCH_DATE}', 'YYYY-MM-DD') AS BD_EXCH_DATE,
'${BD_EXCH_TIME}' AS BD_EXCH_TIME,
C1.DATA_CHK_TP,
C1.DATA_CHK_COL,
C1.DATA_VAL,
S1.SRC_PK,
CURRENT_TIMESTAMP AS UPDATE_DATETIME
FROM
(
SELECT * FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK
) C1
LEFT JOIN 
(
SELECT CAST(ROWID AS VARCHAR2(100)) AS CHK_ID , ${SQL_STMT} AS SRC_PK FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
) S1
ON C1.CHK_ID=S1.CHK_ID
;

-- SQL for table: EDW_CT_CTHMR
/* TRANSFORM_DATA */

-- 異動方式待補/待調整，以下目前為公版
/* 1. 刪除Base DATA_EXCH_DATE='#資料交換期別#' 之資料 */
DELETE FROM ${TARGET_SCHEMA}.${TARGET_TABLE} WHERE DATA_EXCH_DATE = TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd');

-- Trinity SQL Script
/* 2. 抽取Stage DATA_EXCH_DATE = '#資料交換期別#'之資料進行新增 */
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
ACTNO,
BRNO,
APNO,
SRNO,
CHKDG,
YYMM,
TCHGCD,
CHGCD,
OPENH,
ACTCLS,
ACTMVO,
ACTMVI,
CHGDP,
CTRVS,
CTRI,
ACTSTP,
CRTHLD,
MRTGE,
BRHLD,
GPACT,
CURCD,
CHARCD,
IRTCD,
TAXCD,
IRTID,
PRDCD,
CTNO,
RXCNT,
AXCNT,
NIRTID,
BCODE,
EIDERR,
ENTPNO,
PIDERR,
PIDNO,
DAMT,
DCNT,
CAMT,
CCNT,
EXPER,
OACTFLG,
U3VCD,
YDBAL,
LMPRB,
CTBAL,
FILLER2,
LASTDT,
OPDAY,
CLSDAY,
ISDAY,
EDAY,
IRDAY,
IVDAY,
XISDAY,
EMPRID,
PAYOID,
LINECD,
"TIME",
SENDFG,
TFLAG,
CONNACT,
FLR,
SBRNO,
IRTSQ,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
BRNO||APNO||SRNO||CHKDG,
BRNO,
APNO,
SRNO,
CHKDG,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(YYMM), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(YYMM))='0' THEN NULL ELSE YYMM END) AS YYMM,
TCHGCD,
CHGCD,
OPENH,
ACTCLS,
ACTMVO,
ACTMVI,
CHGDP,
CTRVS,
CTRI,
ACTSTP,
CRTHLD,
MRTGE,
BRHLD,
GPACT,
CURCD,
CHARCD,
IRTCD,
TAXCD,
IRTID,
PRDCD,
CTNO,
RXCNT,
AXCNT,
NIRTID,
BCODE,
EIDERR,
ENTPNO,
PIDERR,
PIDNO,
DAMT,
DCNT,
CAMT,
CCNT,
EXPER,
OACTFLG,
U3VCD,
YDBAL,
LMPRB,
CTBAL,
FILLER2,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(LASTDT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(LASTDT))='0' THEN NULL ELSE LASTDT END) AS LASTDT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(OPDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(OPDAY))='0' THEN NULL ELSE OPDAY END) AS OPDAY,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(CLSDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(CLSDAY))='0' THEN NULL ELSE CLSDAY END) AS CLSDAY,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ISDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ISDAY))='0' THEN NULL ELSE ISDAY END) AS ISDAY,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(EDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(EDAY))='0' THEN NULL ELSE EDAY END) AS EDAY,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(IRDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(IRDAY))='0' THEN NULL ELSE IRDAY END) AS IRDAY,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(IVDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(IVDAY))='0' THEN NULL ELSE IVDAY END) AS IVDAY,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(XISDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(XISDAY))='0' THEN NULL ELSE XISDAY END) AS XISDAY,
EMPRID,
PAYOID,
LINECD,
"TIME",
SENDFG,
TFLAG,
CONNACT,
FLR,
SBRNO,
IRTSQ,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE DATA_EXCH_DATE = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
AND CAST(ROWID AS VARCHAR2(100)) NOT IN (SELECT DISTINCT CHK_ID FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK WHERE DATA_CHK_TP LIKE '%err');

.export @LOAD_ROWCNT updatecnt;
