-- SQL for table: EDW_GL_GLDPTR
/* CHECK_DATA */

-- Trinity SQL Script
INSERT INTO ${TARGET_SCHEMA}.${TASK_NAME}_CHK
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'TXAMT' AS DATA_CHK_COL,
TXAMT AS DATA_VAL,
SDG.UFN_NUMCHECK(TXAMT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'TXQTY' AS DATA_CHK_COL,
TXQTY AS DATA_VAL,
SDG.UFN_NUMCHECK(TXQTY) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'AVEBAL' AS DATA_CHK_COL,
AVEBAL AS DATA_VAL,
SDG.UFN_NUMCHECK(AVEBAL) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'PRICE' AS DATA_CHK_COL,
PRICE AS DATA_VAL,
SDG.UFN_NUMCHECK(PRICE) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'"VALUE"' AS DATA_CHK_COL,
"VALUE" AS DATA_VAL,
SDG.UFN_NUMCHECK("VALUE") AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'DISCRAT' AS DATA_CHK_COL,
DISCRAT AS DATA_VAL,
SDG.UFN_NUMCHECK(DISCRAT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'DISCAMT' AS DATA_CHK_COL,
DISCAMT AS DATA_VAL,
SDG.UFN_NUMCHECK(DISCAMT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CHARGE' AS DATA_CHK_COL,
CHARGE AS DATA_VAL,
SDG.UFN_NUMCHECK(CHARGE) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'INVAMT' AS DATA_CHK_COL,
INVAMT AS DATA_VAL,
SDG.UFN_NUMCHECK(INVAMT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'INVQTY' AS DATA_CHK_COL,
INVQTY AS DATA_VAL,
SDG.UFN_NUMCHECK(INVQTY) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'SUMAMT' AS DATA_CHK_COL,
SUMAMT AS DATA_VAL,
SDG.UFN_NUMCHECK(SUMAMT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'AVGCOST' AS DATA_CHK_COL,
AVGCOST AS DATA_VAL,
SDG.UFN_NUMCHECK(AVGCOST) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'PROAMT' AS DATA_CHK_COL,
PROAMT AS DATA_VAL,
SDG.UFN_NUMCHECK(PROAMT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'XRATE' AS DATA_CHK_COL,
XRATE AS DATA_VAL,
SDG.UFN_NUMCHECK(XRATE) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'TXQTYCUR' AS DATA_CHK_COL,
TXQTYCUR AS DATA_VAL,
SDG.UFN_NUMCHECK(TXQTYCUR) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'LTBRNO' AS DATA_CHK_COL,
LTBRNO AS DATA_VAL,
SDG.UFN_NUMCHECK(LTBRNO) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'LTYEAR' AS DATA_CHK_COL,
LTYEAR AS DATA_VAL,
SDG.UFN_NUMCHECK(LTYEAR) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'LTSQCNT' AS DATA_CHK_COL,
LTSQCNT AS DATA_VAL,
SDG.UFN_NUMCHECK(LTSQCNT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CPONAMT' AS DATA_CHK_COL,
CPONAMT AS DATA_VAL,
SDG.UFN_NUMCHECK(CPONAMT) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0';

/* need to modify above 記得要有;號*/
DELETE FROM SDG.SDG_DATA_ERR_TBL WHERE TAB_NM='${TARGET_TABLE}' AND GROUP_CD='${EXEC_GCD}' AND BD_EXCH_DATE=TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd') AND BD_EXCH_TIME='${BD_EXCH_TIME}';

INSERT INTO SDG.SDG_DATA_ERR_TBL
SELECT
'${TARGET_TABLE}' AS TAB_NM,
'${EXEC_GCD}' AS GROUP_CD,
TO_DATE('${BD_EXCH_DATE}', 'YYYY-MM-DD') AS BD_EXCH_DATE,
'${BD_EXCH_TIME}' AS BD_EXCH_TIME,
C1.DATA_CHK_TP,
C1.DATA_CHK_COL,
C1.DATA_VAL,
S1.SRC_PK,
CURRENT_TIMESTAMP AS UPDATE_DATETIME
FROM
(
SELECT * FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK
) C1
LEFT JOIN 
(
SELECT CAST(ROWID AS VARCHAR2(100)) AS CHK_ID , ${SQL_STMT} AS SRC_PK FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
) S1
ON C1.CHK_ID=S1.CHK_ID
;

-- SQL for table: EDW_GL_GLDPTR
/* TRANSFORM_DATA */

-- 異動方式待補/待調整，以下目前為公版
/* 1. 刪除Base DATA_EXCH_DATE='#資料交換期別#' 之資料 */
DELETE FROM ${TARGET_SCHEMA}.${TARGET_TABLE} WHERE DATA_EXCH_DATE = TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd');

-- Trinity SQL Script
/* 2. 抽取Stage DATA_EXCH_DATE = '#資料交換期別#'之資料進行新增 */
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
ACTNO,
BRNO,
APNO,
SRNO,
CHKDG,
TXDAY,
TRCNT,
"TIME",
KINBR,
TRMSEQ,
TXTNO,
TXCODE,
DSCPT,
DSCPTX,
HCODE,
CRDB,
NBCD,
"SOURCE",
CURISK,
DPRISK,
TXAMT,
TXQTY,
AVEBAL,
PRICE,
"VALUE",
DISCRAT,
DISCAMT,
CHARGE,
INVAMT,
INVQTY,
TRNACT,
SUPNO,
TLRNO,
LTXDAY,
TRNCD,
SUMAMT,
AVGCOST,
PROAMT,
NDYFG,
NDYDATE,
CURCD,
XRATE,
TXQTYCUR,
EMPNO,
HERITID,
HERITERR,
LTBRNO,
LTYEAR,
LTSQCNT,
NBSHCODE,
CPONAMT,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
BRNO||APNO||SRNO||CHKDG,
BRNO,
APNO,
SRNO,
CHKDG,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(TXDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(TXDAY))='0' THEN NULL ELSE TXDAY END) AS TXDAY,
TRCNT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(TXDAY)||' '||TRIM("TIME"), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(TXDAY)||' '||TRIM("TIME"))='0' THEN NULL ELSE TRIM(TXDAY)||' '||TRIM("TIME") END) AS "TIME",
KINBR,
TRMSEQ,
TXTNO,
TXCODE,
DSCPT,
DSCPTX,
HCODE,
CRDB,
NBCD,
"SOURCE",
CURISK,
DPRISK,
TXAMT,
TXQTY,
AVEBAL,
PRICE,
"VALUE",
DISCRAT,
DISCAMT,
CHARGE,
INVAMT,
INVQTY,
TRNACT,
SUPNO,
TLRNO,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(LTXDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(LTXDAY))='0' THEN NULL ELSE LTXDAY END) AS LTXDAY,
TRNCD,
SUMAMT,
AVGCOST,
PROAMT,
NDYFG,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(NDYDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(NDYDATE))='0' THEN NULL ELSE NDYDATE END) AS NDYDATE,
CURCD,
XRATE,
TXQTYCUR,
EMPNO,
HERITID,
HERITERR,
LTBRNO,
LTYEAR,
LTSQCNT,
NBSHCODE,
CPONAMT,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE DATA_EXCH_DATE = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
AND CAST(ROWID AS VARCHAR2(100)) NOT IN (SELECT DISTINCT CHK_ID FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK WHERE DATA_CHK_TP LIKE '%err');

.export @LOAD_ROWCNT updatecnt;
