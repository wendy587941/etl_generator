-- SQL for table: EDW_WMS_SFACUSTAOTXN
/* CHECK_DATA */

-- Trinity SQL Script
INSERT INTO ${TARGET_SCHEMA}.${TASK_NAME}_CHK
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'SEQ_NO' AS DATA_CHK_COL,
SEQ_NO AS DATA_VAL,
SDG.UFN_NUMCHECK(SEQ_NO) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'INV_AUM' AS DATA_CHK_COL,
INV_AUM AS DATA_VAL,
SDG.UFN_NUMCHECK(INV_AUM) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'TOTAL_AUM' AS DATA_CHK_COL,
TOTAL_AUM AS DATA_VAL,
SDG.UFN_NUMCHECK(TOTAL_AUM) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'BR_TARGET_ADJ' AS DATA_CHK_COL,
BR_TARGET_ADJ AS DATA_VAL,
SDG.UFN_NUMCHECK(BR_TARGET_ADJ) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'VERSION' AS DATA_CHK_COL,
VERSION AS DATA_VAL,
SDG.UFN_NUMCHECK(VERSION) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0';

/* need to modify above 記得要有;號*/
DELETE FROM SDG.SDG_DATA_ERR_TBL WHERE TAB_NM='${TARGET_TABLE}' AND GROUP_CD='${EXEC_GCD}' AND BD_EXCH_DATE=TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd') AND BD_EXCH_TIME='${BD_EXCH_TIME}';

INSERT INTO SDG.SDG_DATA_ERR_TBL
SELECT
'${TARGET_TABLE}' AS TAB_NM,
'${EXEC_GCD}' AS GROUP_CD,
TO_DATE('${BD_EXCH_DATE}', 'YYYY-MM-DD') AS BD_EXCH_DATE,
'${BD_EXCH_TIME}' AS BD_EXCH_TIME,
C1.DATA_CHK_TP,
C1.DATA_CHK_COL,
C1.DATA_VAL,
S1.SRC_PK,
CURRENT_TIMESTAMP AS UPDATE_DATETIME
FROM
(
SELECT * FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK
) C1
LEFT JOIN 
(
SELECT CAST(ROWID AS VARCHAR2(100)) AS CHK_ID , ${SQL_STMT} AS SRC_PK FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
) S1
ON C1.CHK_ID=S1.CHK_ID
;

-- SQL for table: EDW_WMS_SFACUSTAOTXN
/* TRANSFORM_DATA */

-- 異動方式待補/待調整，以下目前為公版
/* 1. 刪除Base DATA_EXCH_DATE='#資料交換期別#' 之資料 */
DELETE FROM ${TARGET_SCHEMA}.${TARGET_TABLE} WHERE DATA_EXCH_DATE = TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd');

-- Trinity SQL Script
/* 2. 抽取Stage DATA_EXCH_DATE = '#資料交換期別#'之資料進行新增 */
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
SEQ_NO,
CUST_ID,
CUST_NAME,
INV_AUM,
TOTAL_AUM,
OLD_BRANCH_NBR,
OLD_BRANCH_NAME,
OLD_AO_CODE,
OLD_AO_NAME,
OLD_AO_TYPE,
OLD_AO_NOTE,
SERVICE_DAY,
NEW_BRANCH_NBR,
NEW_BRANCH_NAME,
NEW_AO_CODE,
NEW_AO_NAME,
NEW_AO_TYPE,
TXN_CODE,
REASON_CODE,
REASON,
AO_EFFECT_DATE,
VERIFIER_ID,
VERIFIER_NAME,
VERIFIER_DATE,
SEQ_NUM,
APPLY_ID,
BR_TARGET_ADJ,
EXAMINEID_OUT,
EXAMINENAME_OUT,
EXAMINEID_IN,
EXAMINENAME_IN,
MOVEDATE_IN,
TRANSTYPE,
ALTERDT,
VERSION,
CREATETIME,
CREATOR,
MODIFIER,
LASTUPDATE,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
SEQ_NO,
CUST_ID,
CUST_NAME,
INV_AUM,
TOTAL_AUM,
OLD_BRANCH_NBR,
OLD_BRANCH_NAME,
OLD_AO_CODE,
OLD_AO_NAME,
OLD_AO_TYPE,
OLD_AO_NOTE,
SERVICE_DAY,
NEW_BRANCH_NBR,
NEW_BRANCH_NAME,
NEW_AO_CODE,
NEW_AO_NAME,
NEW_AO_TYPE,
TXN_CODE,
REASON_CODE,
REASON,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(AO_EFFECT_DATE), '')='' THEN '0001-01-01' WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(AO_EFFECT_DATE))='0' THEN '0001-01-01' ELSE AO_EFFECT_DATE END) AS AO_EFFECT_DATE,
VERIFIER_ID,
VERIFIER_NAME,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(VERIFIER_DATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(VERIFIER_DATE))='0' THEN NULL ELSE VERIFIER_DATE END) AS VERIFIER_DATE,
SEQ_NUM,
APPLY_ID,
BR_TARGET_ADJ,
EXAMINEID_OUT,
EXAMINENAME_OUT,
EXAMINEID_IN,
EXAMINENAME_IN,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(MOVEDATE_IN), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(MOVEDATE_IN))='0' THEN NULL ELSE MOVEDATE_IN END) AS MOVEDATE_IN,
TRANSTYPE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ALTERDT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ALTERDT))='0' THEN NULL ELSE ALTERDT END) AS ALTERDT,
VERSION,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(CREATETIME), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(CREATETIME))='0' THEN NULL ELSE CREATETIME END) AS CREATETIME,
CREATOR,
MODIFIER,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(LASTUPDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(LASTUPDATE))='0' THEN NULL ELSE LASTUPDATE END) AS LASTUPDATE,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE DATA_EXCH_DATE = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
AND CAST(ROWID AS VARCHAR2(100)) NOT IN (SELECT DISTINCT CHK_ID FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK WHERE DATA_CHK_TP LIKE '%err');

.export @LOAD_ROWCNT updatecnt;
