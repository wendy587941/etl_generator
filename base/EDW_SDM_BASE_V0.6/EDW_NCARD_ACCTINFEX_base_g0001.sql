-- SQL for table: EDW_NCARD_ACCTINFEX
/* TRANSFORM_DATA */

-- 異動方式待補/待調整，以下目前為公版
/* 1. 刪除Base DATA_EXCH_DATE='#資料交換期別#' 之資料 */
DELETE FROM ${TARGET_SCHEMA}.${TARGET_TABLE} WHERE DATA_EXCH_DATE = TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd');

-- Trinity SQL Script
/* 2. 抽取Stage DATA_EXCH_DATE = '#資料交換期別#'之資料進行新增 */
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
BU,
ACCT_NBR,
PRODUCT,
CURRENCY,
STMT_ADDR_TYPE,
STMT_SEND_FLAG,
STMT_ADDR_ZIP,
STMT_ADDR_ZONE,
STMT_ADDR,
STMT_PHONE,
STMT_PARALLEL_TERM,
STMT_EBILL_START_DTE,
STMT_BRANCH,
ADDR_BRANCH,
ACCT_GROUP_AFTER_NEXT,
ACCT_GROUP_AFTER_NEXT_DTE,
STMT_IND,
POST_RESULT,
MNT_DT,
MNT_USER,
NOTIFY_APPROVE,
NOTIFY_SEND_FLAG,
ACCT_INF_EX_UC01,
ACCT_INF_EX_UC02,
ACCT_INF_EX_UC03,
ACCT_INF_EX_UC04,
ACCT_INF_EX_UC05,
ACCT_INF_EX_UC06,
ACCT_INF_EX_UC07,
ACCT_INF_EX_UC08,
ACCT_INF_EX_UC09,
ACCT_INF_EX_UC10,
ACCT_INF_EX_UC11,
ACCT_INF_EX_UC12,
ACCT_INF_EX_UC13,
ACCT_INF_EX_UC14,
ACCT_INF_EX_UC15,
ACCT_INF_EX_UC16,
ACCT_INF_EX_UC17,
ACCT_INF_EX_UC18,
ACCT_INF_EX_UC19,
ACCT_INF_EX_UC20,
ACCT_INF_EX_DTE01,
ACCT_INF_EX_DTE02,
ACCT_INF_EX_DTE03,
ACCT_INF_EX_DTE04,
ACCT_INF_EX_DTE05,
ACCT_INF_EX_DTE06,
ACCT_INF_EX_DTE07,
ACCT_INF_EX_DTE08,
ACCT_INF_EX_DTE09,
ACCT_INF_EX_DTE10,
ACCT_INF_EX_AMT01,
ACCT_INF_EX_AMT02,
ACCT_INF_EX_AMT03,
ACCT_INF_EX_AMT04,
ACCT_INF_EX_AMT05,
ACCT_INF_EX_AMT06,
ACCT_INF_EX_AMT07,
ACCT_INF_EX_AMT08,
ACCT_INF_EX_AMT09,
ACCT_INF_EX_AMT10,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
BU,
ACCT_NBR,
PRODUCT,
CURRENCY,
STMT_ADDR_TYPE,
STMT_SEND_FLAG,
STMT_ADDR_ZIP,
STMT_ADDR_ZONE,
STMT_ADDR,
STMT_PHONE,
STMT_PARALLEL_TERM,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(STMT_EBILL_START_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(STMT_EBILL_START_DTE))='0' THEN NULL ELSE STMT_EBILL_START_DTE END) AS STMT_EBILL_START_DTE,
STMT_BRANCH,
ADDR_BRANCH,
ACCT_GROUP_AFTER_NEXT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ACCT_GROUP_AFTER_NEXT_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ACCT_GROUP_AFTER_NEXT_DTE))='0' THEN NULL ELSE ACCT_GROUP_AFTER_NEXT_DTE END) AS ACCT_GROUP_AFTER_NEXT_DTE,
STMT_IND,
POST_RESULT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(MNT_DT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(MNT_DT))='0' THEN NULL ELSE MNT_DT END) AS MNT_DT,
MNT_USER,
NOTIFY_APPROVE,
NOTIFY_SEND_FLAG,
ACCT_INF_EX_UC01,
ACCT_INF_EX_UC02,
ACCT_INF_EX_UC03,
ACCT_INF_EX_UC04,
ACCT_INF_EX_UC05,
ACCT_INF_EX_UC06,
ACCT_INF_EX_UC07,
ACCT_INF_EX_UC08,
ACCT_INF_EX_UC09,
ACCT_INF_EX_UC10,
ACCT_INF_EX_UC11,
ACCT_INF_EX_UC12,
ACCT_INF_EX_UC13,
ACCT_INF_EX_UC14,
ACCT_INF_EX_UC15,
ACCT_INF_EX_UC16,
ACCT_INF_EX_UC17,
ACCT_INF_EX_UC18,
ACCT_INF_EX_UC19,
ACCT_INF_EX_UC20,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ACCT_INF_EX_DTE01), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ACCT_INF_EX_DTE01))='0' THEN NULL ELSE ACCT_INF_EX_DTE01 END) AS ACCT_INF_EX_DTE01,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ACCT_INF_EX_DTE02), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ACCT_INF_EX_DTE02))='0' THEN NULL ELSE ACCT_INF_EX_DTE02 END) AS ACCT_INF_EX_DTE02,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ACCT_INF_EX_DTE03), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ACCT_INF_EX_DTE03))='0' THEN NULL ELSE ACCT_INF_EX_DTE03 END) AS ACCT_INF_EX_DTE03,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ACCT_INF_EX_DTE04), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ACCT_INF_EX_DTE04))='0' THEN NULL ELSE ACCT_INF_EX_DTE04 END) AS ACCT_INF_EX_DTE04,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ACCT_INF_EX_DTE05), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ACCT_INF_EX_DTE05))='0' THEN NULL ELSE ACCT_INF_EX_DTE05 END) AS ACCT_INF_EX_DTE05,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ACCT_INF_EX_DTE06), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ACCT_INF_EX_DTE06))='0' THEN NULL ELSE ACCT_INF_EX_DTE06 END) AS ACCT_INF_EX_DTE06,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ACCT_INF_EX_DTE07), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ACCT_INF_EX_DTE07))='0' THEN NULL ELSE ACCT_INF_EX_DTE07 END) AS ACCT_INF_EX_DTE07,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ACCT_INF_EX_DTE08), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ACCT_INF_EX_DTE08))='0' THEN NULL ELSE ACCT_INF_EX_DTE08 END) AS ACCT_INF_EX_DTE08,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ACCT_INF_EX_DTE09), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ACCT_INF_EX_DTE09))='0' THEN NULL ELSE ACCT_INF_EX_DTE09 END) AS ACCT_INF_EX_DTE09,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ACCT_INF_EX_DTE10), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ACCT_INF_EX_DTE10))='0' THEN NULL ELSE ACCT_INF_EX_DTE10 END) AS ACCT_INF_EX_DTE10,
ACCT_INF_EX_AMT01,
ACCT_INF_EX_AMT02,
ACCT_INF_EX_AMT03,
ACCT_INF_EX_AMT04,
ACCT_INF_EX_AMT05,
ACCT_INF_EX_AMT06,
ACCT_INF_EX_AMT07,
ACCT_INF_EX_AMT08,
ACCT_INF_EX_AMT09,
ACCT_INF_EX_AMT10,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE DATA_EXCH_DATE = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
;

.export @LOAD_ROWCNT updatecnt;
