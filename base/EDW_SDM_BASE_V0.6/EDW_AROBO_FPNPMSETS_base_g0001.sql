-- SQL for table: EDW_AROBO_FPNPMSETS
/* CHECK_DATA */

-- Trinity SQL Script
INSERT INTO ${TARGET_SCHEMA}.${TASK_NAME}_CHK
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'CUS_AGE' AS DATA_CHK_COL,
CUS_AGE AS DATA_VAL,
SDG.UFN_NUMCHECK(CUS_AGE) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'INV_PERIOD' AS DATA_CHK_COL,
INV_PERIOD AS DATA_VAL,
SDG.UFN_NUMCHECK(INV_PERIOD) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'EXP_AMT_FC' AS DATA_CHK_COL,
EXP_AMT_FC AS DATA_VAL,
SDG.UFN_NUMCHECK(EXP_AMT_FC) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'RETIRE_AGE' AS DATA_CHK_COL,
RETIRE_AGE AS DATA_VAL,
SDG.UFN_NUMCHECK(RETIRE_AGE) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'EXPECT_AGE' AS DATA_CHK_COL,
EXPECT_AGE AS DATA_VAL,
SDG.UFN_NUMCHECK(EXPECT_AGE) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'EXPENSES' AS DATA_CHK_COL,
EXPENSES AS DATA_VAL,
SDG.UFN_NUMCHECK(EXPENSES) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0'
UNION ALL
SELECT *
FROM (
SELECT
CAST(ROWID AS VARCHAR2(100)) AS CHK_ID,
'num_err' AS DATA_CHK_TP,
'PASSIVE_INCOME' AS DATA_CHK_COL,
PASSIVE_INCOME AS DATA_VAL,
SDG.UFN_NUMCHECK(PASSIVE_INCOME) AS CHECK_RESULT
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE} 
WHERE DATA_EXCH_DATE = TO_DATE('${TXDATE}', 'YYYY-MM-DD')
) S1
WHERE S1.CHECK_RESULT = '0';

/* need to modify above 記得要有;號*/
DELETE FROM SDG.SDG_DATA_ERR_TBL WHERE TAB_NM='${TARGET_TABLE}' AND GROUP_CD='${EXEC_GCD}' AND BD_EXCH_DATE=TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd') AND BD_EXCH_TIME='${BD_EXCH_TIME}';

INSERT INTO SDG.SDG_DATA_ERR_TBL
SELECT
'${TARGET_TABLE}' AS TAB_NM,
'${EXEC_GCD}' AS GROUP_CD,
TO_DATE('${BD_EXCH_DATE}', 'YYYY-MM-DD') AS BD_EXCH_DATE,
'${BD_EXCH_TIME}' AS BD_EXCH_TIME,
C1.DATA_CHK_TP,
C1.DATA_CHK_COL,
C1.DATA_VAL,
S1.SRC_PK,
CURRENT_TIMESTAMP AS UPDATE_DATETIME
FROM
(
SELECT * FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK
) C1
LEFT JOIN 
(
SELECT CAST(ROWID AS VARCHAR2(100)) AS CHK_ID , ${SQL_STMT} AS SRC_PK FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
) S1
ON C1.CHK_ID=S1.CHK_ID
;

-- SQL for table: EDW_AROBO_FPNPMSETS
/* TRANSFORM_DATA */

-- 異動方式待補/待調整，以下目前為公版
/* 1. 刪除Base DATA_EXCH_DATE='#資料交換期別#' 之資料 */
DELETE FROM ${TARGET_SCHEMA}.${TARGET_TABLE} WHERE DATA_EXCH_DATE = TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd');

-- Trinity SQL Script
/* 2. 抽取Stage DATA_EXCH_DATE = '#資料交換期別#'之資料進行新增 */
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
CUS_CODE,
IPMSET_CODE,
IPMSET_NAME,
IPMSETTYPE_CODE,
CUS_AGE,
INV_STD_DATE,
INV_PERIOD,
INV_CUR_CODE,
RANK_CODE,
FINISH_YN,
FINISH_DATE,
REMOVE_YN,
ACTIVE_YN,
FIRST_PLAN_DATE,
CUS_AGE_GRADE,
INV_OBJ,
INV_OBJ_ITEM,
INV_END_DATE,
INV_RANK_CODE,
CUS_INCOME_GRADE,
STATUS,
EXP_AMT_FC,
ACTIVE_DATE,
RETIRE_AGE,
EXPECT_AGE,
EXPENSES,
CUS_AUM_GRADE,
PROJECT_CODE,
REG_INV_STATUS,
INV_TYPE,
PASSIVE_INCOME,
ASSETCOM_ACTIVE_DATE,
WITHDRAW_ACNO,
REFERRAL_BRAN_CODE,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
CUS_CODE,
IPMSET_CODE,
IPMSET_NAME,
IPMSETTYPE_CODE,
CUS_AGE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(INV_STD_DATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(INV_STD_DATE))='0' THEN NULL ELSE INV_STD_DATE END) AS INV_STD_DATE,
INV_PERIOD,
INV_CUR_CODE,
RANK_CODE,
FINISH_YN,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(FINISH_DATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(FINISH_DATE))='0' THEN NULL ELSE FINISH_DATE END) AS FINISH_DATE,
REMOVE_YN,
ACTIVE_YN,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(FIRST_PLAN_DATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(FIRST_PLAN_DATE))='0' THEN NULL ELSE FIRST_PLAN_DATE END) AS FIRST_PLAN_DATE,
CUS_AGE_GRADE,
INV_OBJ,
INV_OBJ_ITEM,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(INV_END_DATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(INV_END_DATE))='0' THEN NULL ELSE INV_END_DATE END) AS INV_END_DATE,
INV_RANK_CODE,
CUS_INCOME_GRADE,
STATUS,
EXP_AMT_FC,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ACTIVE_DATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ACTIVE_DATE))='0' THEN NULL ELSE ACTIVE_DATE END) AS ACTIVE_DATE,
RETIRE_AGE,
EXPECT_AGE,
EXPENSES,
CUS_AUM_GRADE,
PROJECT_CODE,
REG_INV_STATUS,
INV_TYPE,
PASSIVE_INCOME,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ASSETCOM_ACTIVE_DATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ASSETCOM_ACTIVE_DATE))='0' THEN NULL ELSE ASSETCOM_ACTIVE_DATE END) AS ASSETCOM_ACTIVE_DATE,
WITHDRAW_ACNO,
REFERRAL_BRAN_CODE,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE DATA_EXCH_DATE = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
AND CAST(ROWID AS VARCHAR2(100)) NOT IN (SELECT DISTINCT CHK_ID FROM ${TARGET_SCHEMA}.${TASK_NAME}_CHK WHERE DATA_CHK_TP LIKE '%err');

.export @LOAD_ROWCNT updatecnt;
