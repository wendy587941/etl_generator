-- SQL for table: EDW_LN_AB41
/* TRANSFORM_DATA */

-- 異動方式待補/待調整，以下目前為公版
/* 1. 刪除Base DATA_EXCH_DATE='#資料交換期別#' 之資料 */
DELETE FROM ${TARGET_SCHEMA}.${TARGET_TABLE} WHERE DATA_EXCH_DATE = TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd');

-- Trinity SQL Script
/* 2. 抽取Stage DATA_EXCH_DATE = '#資料交換期別#'之資料進行新增 */
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
FILLER1,
"DATE",
BRNO,
SAPNO,
CURCD,
ACTNO,
ENTPNO,
EIDERR,
"6MONS-FLAG",
PIDNO,
PIDERR,
LNCUR,
CONAMT,
NTLMT,
BAL,
NTBAL,
CMAPAMT,
BCODE,
CHARCD,
APKIND,
"USAGE",
MANG,
CPSTCD,
CSDATE,
CEDATE,
ODDATE,
SCOP,
SGAPER,
SGAID,
TFBRNO,
BSID,
BSCD,
ISCOD,
TFCD,
NCODE,
PRDATE,
IDATE,
COMPROMISE,
FINA,
SCHCD,
CACTNO,
LVALUE,
SQNO,
SDT,
CHGCD,
LBMNTR,
FAPNO,
FAPNOS,
BASE,
R0401CD,
MNCNT,
PER1,
ODCD,
ODCD2,
AODCD,
BODCD,
SORTCD,
FILLER2,
IRDT,
LBMNDT,
IRND,
FD-AB32B-AREA,
IRID,
IXPR,
IXID,
IXND,
SPIXPR,
SPIXND,
PERCENT,
FITDIV,
PLCKIND,
TRUCD,
TRCSDATE,
TRAREA,
TRURT,
SHARID,
CYCLE,
FITIRT,
CONTYP,
IREVOCB,
APDATE,
APAMT,
EDAY,
IDAY,
BLCDT,
EDUSNO,
BKIND,
KEY,
OBUENT,
DUAMT,
RVAMT,
RVINT,
RVFEE,
LMTG,
AB41_3000,
BADCD,
CMPTYPE,
NEWCD,
APPRSV,
CPTYP,
CPCD,
SSAPNO,
IRCD,
PAYDT,
ODPAYDT,
FD-AB32B-GPAMTB,
DUINT,
ASST2,
ASST3,
ASST4,
ASST5,
CPSTAMT,
IMPSBLR,
NCPSTCD,
PER2,
NONUSE,
BKIND2,
CTLSUB,
UNLOSS,
CNGUAR,
CNFLG,
CNITEMCD,
CNBCODE,
CNBSCD,
FILLER3,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
FILLER1,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM("DATE"), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM("DATE"))='0' THEN NULL ELSE "DATE" END) AS "DATE",
BRNO,
SAPNO,
CURCD,
ACTNO,
ENTPNO,
EIDERR,
"6MONS-FLAG",
PIDNO,
PIDERR,
LNCUR,
CONAMT,
NTLMT,
BAL,
NTBAL,
CMAPAMT,
BCODE,
CHARCD,
APKIND,
"USAGE",
MANG,
CPSTCD,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(CSDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(CSDATE))='0' THEN NULL ELSE CSDATE END) AS CSDATE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(CEDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(CEDATE))='0' THEN NULL ELSE CEDATE END) AS CEDATE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ODDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ODDATE))='0' THEN NULL ELSE ODDATE END) AS ODDATE,
SCOP,
SGAPER,
SGAID,
TFBRNO,
BSID,
BSCD,
ISCOD,
TFCD,
NCODE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(PRDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(PRDATE))='0' THEN NULL ELSE PRDATE END) AS PRDATE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(IDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(IDATE))='0' THEN NULL ELSE IDATE END) AS IDATE,
COMPROMISE,
FINA,
SCHCD,
CACTNO,
LVALUE,
SQNO,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(SDT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(SDT))='0' THEN NULL ELSE SDT END) AS SDT,
CHGCD,
LBMNTR,
FAPNO,
FAPNOS,
BASE,
R0401CD,
MNCNT,
PER1,
ODCD,
ODCD2,
AODCD,
BODCD,
SORTCD,
FILLER2,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(IRDT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(IRDT))='0' THEN NULL ELSE IRDT END) AS IRDT,
LBMNDT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(IRND), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(IRND))='0' THEN NULL ELSE IRND END) AS IRND,
FD-AB32B-AREA,
IRID,
IXPR,
IXID,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(IXND), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(IXND))='0' THEN NULL ELSE IXND END) AS IXND,
SPIXPR,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(SPIXND), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(SPIXND))='0' THEN NULL ELSE SPIXND END) AS SPIXND,
PERCENT,
FITDIV,
PLCKIND,
TRUCD,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(TRCSDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(TRCSDATE))='0' THEN NULL ELSE TRCSDATE END) AS TRCSDATE,
TRAREA,
TRURT,
SHARID,
CYCLE,
FITIRT,
CONTYP,
IREVOCB,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(APDATE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(APDATE))='0' THEN NULL ELSE APDATE END) AS APDATE,
APAMT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(EDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(EDAY))='0' THEN NULL ELSE EDAY END) AS EDAY,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(IDAY), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(IDAY))='0' THEN NULL ELSE IDAY END) AS IDAY,
BLCDT,
EDUSNO,
BKIND,
KEY,
OBUENT,
DUAMT,
RVAMT,
RVINT,
RVFEE,
LMTG,
AB41_3000,
BADCD,
CMPTYPE,
NEWCD,
APPRSV,
CPTYP,
CPCD,
SSAPNO,
IRCD,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(PAYDT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(PAYDT))='0' THEN NULL ELSE PAYDT END) AS PAYDT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ODPAYDT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ODPAYDT))='0' THEN NULL ELSE ODPAYDT END) AS ODPAYDT,
FD-AB32B-GPAMTB,
DUINT,
ASST2,
ASST3,
ASST4,
ASST5,
CPSTAMT,
IMPSBLR,
NCPSTCD,
PER2,
NONUSE,
BKIND2,
CTLSUB,
UNLOSS,
CNGUAR,
CNFLG,
CNITEMCD,
CNBCODE,
CNBSCD,
FILLER3,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE DATA_EXCH_DATE = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
;

.export @LOAD_ROWCNT updatecnt;
