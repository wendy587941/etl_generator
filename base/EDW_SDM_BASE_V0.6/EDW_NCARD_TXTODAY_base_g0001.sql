-- SQL for table: EDW_NCARD_TXTODAY
/* TRANSFORM_DATA */

-- 異動方式待補/待調整，以下目前為公版
/* 1. 刪除Base DATA_EXCH_DATE='#資料交換期別#' 之資料 */
DELETE FROM ${TARGET_SCHEMA}.${TARGET_TABLE} WHERE DATA_EXCH_DATE = TO_DATE('${BD_EXCH_DATE}', 'yyyy-MM-dd');

-- Trinity SQL Script
/* 2. 抽取Stage DATA_EXCH_DATE = '#資料交換期別#'之資料進行新增 */
INSERT INTO ${TARGET_SCHEMA}.${TARGET_TABLE}
(
BU,
ACCT_NBR,
PRODUCT,
CURRENCY,
ACCT_STATUS,
ACCT_GROUP,
CARD_NBR,
CARD_PRODUCT,
EFF_DTE,
POSTING_DTE,
STMT_DTE,
ENTRY_MODE,
LINK_NBR,
DUE_METHOD,
CODE,
PMT_TERM,
SEQ,
MT_TYPE,
AUTH_CODE,
ARN,
COUNTRY_CODE,
CITY_CODE,
ACQ_BANK_NBR,
MER_NBR,
POS_NBR,
MCC_CODE,
SOURCE_CODE,
DESCR,
AMT,
ORIG_CURRENCY,
ORIG_AMT,
ORIG_DTE,
INST_TERM_POST,
INST_TERM,
INST_TTL_AMT,
AUTH_MATCH,
AUTH_MATCH_AMT,
PMT_AMT_IN_GRACE,
REVOLVING_AMT,
PMT_AMT,
TX_RATE,
POST_RESULT,
MNT_DT,
MNT_USER,
INT_ACTION,
PMT_AMT_INTNL,
SOURCE_CODE_INTNL,
COLL_AMT,
COLL_DTE,
CHGOFF_AMT,
CHGOFF_DTE,
USER_CHAR_1,
USER_CHAR_2,
USER_CHAR_3,
USER_CHAR_4,
USER_CHAR_5,
USER_DTE_1,
USER_DTE_2,
USER_DTE_3,
USER_DTE_4,
USER_DTE_5,
USER_AMT_1,
USER_AMT_2,
USER_AMT_3,
USER_AMT_4,
USER_AMT_5,
DATA_UPDATE_TIME,
DATA_EXCH_DATE
)
SELECT
BU,
ACCT_NBR,
PRODUCT,
CURRENCY,
ACCT_STATUS,
ACCT_GROUP,
CARD_NBR,
CARD_PRODUCT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(EFF_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(EFF_DTE))='0' THEN NULL ELSE EFF_DTE END) AS EFF_DTE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(POSTING_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(POSTING_DTE))='0' THEN NULL ELSE POSTING_DTE END) AS POSTING_DTE,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(STMT_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(STMT_DTE))='0' THEN NULL ELSE STMT_DTE END) AS STMT_DTE,
ENTRY_MODE,
LINK_NBR,
DUE_METHOD,
CODE,
PMT_TERM,
SEQ,
MT_TYPE,
AUTH_CODE,
ARN,
COUNTRY_CODE,
CITY_CODE,
ACQ_BANK_NBR,
MER_NBR,
POS_NBR,
MCC_CODE,
SOURCE_CODE,
DESCR,
AMT,
ORIG_CURRENCY,
ORIG_AMT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(ORIG_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(ORIG_DTE))='0' THEN NULL ELSE ORIG_DTE END) AS ORIG_DTE,
INST_TERM_POST,
INST_TERM,
INST_TTL_AMT,
AUTH_MATCH,
AUTH_MATCH_AMT,
PMT_AMT_IN_GRACE,
REVOLVING_AMT,
PMT_AMT,
TX_RATE,
POST_RESULT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(MNT_DT), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(MNT_DT))='0' THEN NULL ELSE MNT_DT END) AS MNT_DT,
MNT_USER,
INT_ACTION,
PMT_AMT_INTNL,
SOURCE_CODE_INTNL,
COLL_AMT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(COLL_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(COLL_DTE))='0' THEN NULL ELSE COLL_DTE END) AS COLL_DTE,
CHGOFF_AMT,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(CHGOFF_DTE), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(CHGOFF_DTE))='0' THEN NULL ELSE CHGOFF_DTE END) AS CHGOFF_DTE,
USER_CHAR_1,
USER_CHAR_2,
USER_CHAR_3,
USER_CHAR_4,
USER_CHAR_5,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(USER_DTE_1), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(USER_DTE_1))='0' THEN NULL ELSE USER_DTE_1 END) AS USER_DTE_1,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(USER_DTE_2), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(USER_DTE_2))='0' THEN NULL ELSE USER_DTE_2 END) AS USER_DTE_2,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(USER_DTE_3), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(USER_DTE_3))='0' THEN NULL ELSE USER_DTE_3 END) AS USER_DTE_3,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(USER_DTE_4), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(USER_DTE_4))='0' THEN NULL ELSE USER_DTE_4 END) AS USER_DTE_4,
SDG.UFN_NORM_DATE(CASE WHEN NVL(TRIM(USER_DTE_5), '')='' THEN NULL WHEN SDG.UFN_ADDATECHECK_DATE(TRIM(USER_DTE_5))='0' THEN NULL ELSE USER_DTE_5 END) AS USER_DTE_5,
USER_AMT_1,
USER_AMT_2,
USER_AMT_3,
USER_AMT_4,
USER_AMT_5,
CURRENT_TIMESTAMP,
to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
FROM ${SOURCE_TABLE_OWNER}.${SOURCE_TABLE}
WHERE DATA_EXCH_DATE = to_date('${BD_EXCH_DATE}', 'yyyy-MM-dd')
;

.export @LOAD_ROWCNT updatecnt;
